##################################################################################
# >>> 처리 메시지 작성 원칙
# 1. 처리메시지는 에러를 처리할 수 있는 구체적인 내용을 포함한다.
# 2. 경어체를 사용한다. (ex, ~하세요. ~해 주세요.)
# ex)
# - 다시 시도해 보시고 계속 문제가 발생하면 콜센터로 연락해 주세요.
# - 시스템 장애 복구 중입니다. 급한 경우 콜센터로 연락해 주세요.
##################################################################################

# Application에러 처리
# usecase: Application 에러를 처리 (사용자는 에러가 복구 될 때 까지 기다리거나 콜센터에 연락하는 것 외에는 방법이 없는 경우)

handle.app.com.ContactCallCenter = 잠시 후 다시 시도해 보시고 계속 문제가 발생하면 센터로 연락해 주세요.
handle.app.com.FillMadatory = "{0}" 항목이 유실되었습니다. 

# Framework에러 처리
# usecase: Framework 에러를 처리 (사용자가 처리할 방법은 없으나, 프로그램의 오류를 디버깅할 수 있도록 정보를 제공할 수 있음)

handle.framework.ex.ContributeDebugging = 죄송합니다 프로그램에 문제가 있습니다. 에러 발생시간을 포함하여 센터로 연락해 주세요.
handle.framework.ex.WaitForSeconds = 시스템에 일시적 장애가 발생하였습니다. 잠시후 다시 시도해 주세요.
