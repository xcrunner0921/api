<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
						http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
						http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-2.5.xsd
     					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- enable component scanning (beware that this does not enable mapper scanning!) -->
	<context:component-scan base-package="api.subway" />
	
	<!-- resteasy 적용시 @Autowired 사용하는 경우 정의해 주어야 함 -->
<!-- 	<bean id="subwayService" class="api.subway.rs.service.SubwayService" /> -->
<!-- 	<bean id="subwayDao" class="api.subway.dao.impl.SubwayDaoImpl" /> -->
<!-- 	<bean id="station" class="api.subway.model.Station" /> -->

<!-- 	<jaxws:endpoint id="bookShelfService" -->
<!-- 		implementor="com.aranin.weblog4j.services.BookShelfServiceImpl" -->
<!-- 		address="/bookshelfservice" /> -->

<!-- 	<jaxws:endpoint id="subwayService" -->
<!-- 		implementor="api.subway.rest.service.SubwayService" -->
<!-- 		address="/soap" /> -->
 
 
<!--     <bean id="subwaySoapService" class="api.subway.rest.service.SubwayService"/> -->
 
	
	<jaxrs:server id="restContainer" address="/">
		<jaxrs:serviceBeans>
			<ref bean="subwayService" />
<!-- 			<ref bean="subwayServiceJSON" /> -->
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean class="api.subway.exception.ApiExceptionHandler"/>
<!-- 			<bean class="org.apache.cxf.jaxrs.provider.jsrjsonp.JsrJsonpProvider"/> -->
		</jaxrs:providers>
	</jaxrs:server>
	
	<!-- dataSource -->
	<import resource="classpath:spring/dataSource.cubrid.xml" />
	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- sqlsession dao -->
<!--     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="configLocation" value="classpath:spring/mybatisConfig.xml" /> -->
<!-- 		<property name="mapperLocations" value="classpath*:query/*.mappers.xml" /> -->
<!-- 	</bean> -->
	
	<!-- defaultDao 설정 -->
<!-- 	<bean id="apiDao" class="com.ktnet.ets.framework.jdbc.MybatisSqlClient"> -->
<!-- 		<property name="sqlSessionFactory" ref="defaultSqlSessionFactory"></property> -->
<!-- 	</bean> -->
	<!-- sqlsession dao -->
	
	<!-- sqlSessionTemplate -->
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:spring/mybatisConfig.xml" />
		<property name="mapperLocations" value="classpath:query/*.mapper.cubrid.xml" />
	</bean>

    <!-- scan for mappers and let them be autowired -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
    <!-- sqlSessionTemplate -->
    
    <!--프로퍼티 설정 -->
	<bean id="propertySource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">

		<property name="basenames">
			<list>
				<value>classpath:property/application</value>
				<!-- <value>classpath:property/tableEntityBuilder</value> -->
			</list>
		</property>
		<!--cacheSeconds 가 -1 이면 reload 하지 않음 -->
		<!--<property name="cacheSeconds" value="${property.reload.second}" />-->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!--메시지 설정 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:message/alert</value>
				<value>classpath:message/error</value>
				<value>classpath:message/handle</value>
			</list>
		</property>
		<!--cacheSeconds 가 -1 이면 reload 하지 않음 -->
		<!--<property name="cacheSeconds" value="${message.reload.second}" />-->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	
</beans>
