##################################################################################
# 에러 메시지 작성 원칙
# 1. 에러메시지는 에러를 인지시키는 간결한 문장으로 작성한다. (에러/처리/상세원인을 따로 분리했기 때문)
# 2. 경어체를 사용한다. (ex, ~입니다. ~하세요.)
# ex)
# - 파일을 찾을 수 없습니다.
# - DB 등록을 실패하였습니다.
##################################################################################

# Application에러 (Application에서 발생하는 에러로 Biz 로직이 아닌 모든 에러)
# usecase: DB 트랜잭션처리 에러, I/O 에러

error.app.com.MandatoryMissing = 필수 입력항목이 누락되었습니다.

# error.app.com 하위패키지 분류원칙: 해당라인에서 발생한 JDK Exception의 패키지에서 java.[여기] 의 패키지를 기준으로 하위패키지를 적용한다.
# (ex. java.io.IOException & java.io.FileNotFoundException => application.io, java.sql.SQLException => application.sql

error.app.com.io.FileNotFound = {0} 파일을 찾을 수 없습니다.
error.app.com.io.StreamNotClose = 스트림을 닫을 수 없습니다.
error.app.com.sql.TxRollbackTest = 트랜잭션 테스트 에러가 발생했습니다.

# Framework에러 (Application에서 발생하는 에러 중, 특히 Framework 내부에서 발생한 에러)
# usecase: 파일처리 에러, 문자열 파싱 에러
# 하위패키지 분류원칙: Framework의 모듈 기준 최상위 패키지를 기준으로 하위패키지를 적용한다.
# (ex. core, log, message, exception)

error.framework.com.ResourceClose = 자원을 닫는중 오류가 발생했습니다. 
error.framework.util.BeanHandling = 자바빈을 처리중 오류가 발생했습니다.
error.framework.util.KoreanNotEncode = 한글 인코딩 오류입니다.
error.framework.jdbc.Database = 데이터베이스 오류입니다.
error.framework.web.Print = 웹으로 출력 중 오류가 발생했습니다.
error.framework.web.viewhelper.ComboHandling = 코드 처리중 오류가 발생했습니다.
error.framework.spring.validation.Validation = 입력값이 유효하지 않습니다.


