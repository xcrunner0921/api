<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
						http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
						http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-2.5.xsd
     					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- enable component scanning (beware that this does not enable mapper scanning!) -->
	<context:component-scan base-package="api.subway" />
	
	<!-- resteasy 적용시 @Autowired 사용하는 경우 정의해 주어야 함 -->
<!-- 	<bean id="subwayService" class="api.subway.rs.service.SubwayService" /> -->

<!-- 	<jaxws:endpoint id="bookShelfService" -->
<!-- 		implementor="com.aranin.weblog4j.services.BookShelfServiceImpl" -->
<!-- 		address="/bookshelfservice" /> -->
	
	<jaxrs:server id="restContainer" address="/">
		<jaxrs:serviceBeans>
			<ref bean="subwayService" />
		</jaxrs:serviceBeans>
	</jaxrs:server>
	
	<!-- dataSource start -->
	<!-- 개발서버 : 오라클 11g start -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
        <property name="url" value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:ORCL"/>
        <property name="username" value="spoll"/>
        <property name="password" value="SPOLL"/>
        <!-- <property name="url" value="jdbc:log4jdbc:oracle:thin:@98.0.207.87:1521:ORCL"/>-->
        <!-- <property name="defaultAutoCommit" value="false"/> -->
    </bean>	
    <!-- 개발서버 : 오라클 11g end  -->
    <!-- dataSource end -->
	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- sqlsession dao -->
<!--     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="configLocation" value="classpath:spring/mybatisConfig.xml" /> -->
<!-- 		<property name="mapperLocations" value="classpath*:query/*.mappers.xml" /> -->
<!-- 	</bean> -->
	
	<!-- defaultDao 설정 -->
<!-- 	<bean id="apiDao" class="com.ktnet.ets.framework.jdbc.MybatisSqlClient"> -->
<!-- 		<property name="sqlSessionFactory" ref="defaultSqlSessionFactory"></property> -->
<!-- 	</bean> -->
	<!-- sqlsession dao -->
	
	<!-- mapper dao -->
	<!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="api.subway.model" />
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="api.subway.dao" />
    </bean>
    <!-- mapper dao -->
	
	
</beans>
